// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: GetGlobalState.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace GetGlobalState {

  /// <summary>Holder for reflection information generated from GetGlobalState.proto</summary>
  public static partial class GetGlobalStateReflection {

    #region Descriptor
    /// <summary>File descriptor for GetGlobalState.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GetGlobalStateReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChRHZXRHbG9iYWxTdGF0ZS5wcm90bxIOR2V0R2xvYmFsU3RhdGUaDENvbW1v",
            "bi5wcm90bxoQUW90X0NvbW1vbi5wcm90byJUCg1Qcm9ncmFtU3RhdHVzEi8K",
            "BHR5cGUYASABKA4yIS5HZXRHbG9iYWxTdGF0ZS5Qcm9ncmFtU3RhdHVzVHlw",
            "ZRISCgpzdHJFeHREZXNjGAIgASgJIhUKA0MyUxIOCgZ1c2VySUQYASABKAQi",
            "jgIKA1MyQxIQCghtYXJrZXRISxgBIAEoBRIQCghtYXJrZXRVUxgCIAEoBRIQ",
            "CghtYXJrZXRTSBgDIAEoBRIQCghtYXJrZXRTWhgEIAEoBRIWCg5tYXJrZXRI",
            "S0Z1dHVyZRgFIAEoBRISCgpxb3RMb2dpbmVkGAYgASgIEhIKCnRyZExvZ2lu",
            "ZWQYByABKAgSEQoJc2VydmVyVmVyGAggASgFEhUKDXNlcnZlckJ1aWxkTm8Y",
            "CSABKAUSDAoEdGltZRgKIAEoAxIRCglsb2NhbFRpbWUYCyABKAESNAoNcHJv",
            "Z3JhbVN0YXR1cxgMIAEoCzIdLkdldEdsb2JhbFN0YXRlLlByb2dyYW1TdGF0",
            "dXMiKwoHUmVxdWVzdBIgCgNjMnMYASABKAsyEy5HZXRHbG9iYWxTdGF0ZS5D",
            "MlMiXgoIUmVzcG9uc2USDwoHcmV0VHlwZRgBIAEoBRIOCgZyZXRNc2cYAiAB",
            "KAkSDwoHZXJyQ29kZRgDIAEoBRIgCgNzMmMYBCABKAsyEy5HZXRHbG9iYWxT",
            "dGF0ZS5TMkMqxAMKEVByb2dyYW1TdGF0dXNUeXBlEhoKFlByb2dyYW1TdGF0",
            "dXNUeXBlX05vbmUQABIcChhQcm9ncmFtU3RhdHVzVHlwZV9Mb2FkZWQQARIc",
            "ChhQcm9ncmFtU3RhdHVzVHlwZV9Mb2dpbmcQAhInCiNQcm9ncmFtU3RhdHVz",
            "VHlwZV9OZWVkUGljVmVyaWZ5Q29kZRADEikKJVByb2dyYW1TdGF0dXNUeXBl",
            "X05lZWRQaG9uZVZlcmlmeUNvZGUQBBIhCh1Qcm9ncmFtU3RhdHVzVHlwZV9M",
            "b2dpbkZhaWxlZBAFEiEKHVByb2dyYW1TdGF0dXNUeXBlX0ZvcmNlVXBkYXRl",
            "EAYSKgomUHJvZ3JhbVN0YXR1c1R5cGVfTmVzc2FyeURhdGFQcmVwYXJpbmcQ",
            "BxIoCiRQcm9ncmFtU3RhdHVzVHlwZV9OZXNzYXJ5RGF0YU1pc3NpbmcQCBIn",
            "CiNQcm9ncmFtU3RhdHVzVHlwZV9VbkFncmVlRGlzY2xhaW1lchAJEhsKF1By",
            "b2dyYW1TdGF0dXNUeXBlX1JlYWR5EAoSIQodUHJvZ3JhbVN0YXR1c1R5cGVf",
            "Rm9yY2VMb2dvdXQQC2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Common.CommonReflection.Descriptor, global::QotCommon.QotCommonReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::GetGlobalState.ProgramStatusType), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::GetGlobalState.ProgramStatus), global::GetGlobalState.ProgramStatus.Parser, new[]{ "Type", "StrExtDesc" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GetGlobalState.C2S), global::GetGlobalState.C2S.Parser, new[]{ "UserID" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GetGlobalState.S2C), global::GetGlobalState.S2C.Parser, new[]{ "MarketHK", "MarketUS", "MarketSH", "MarketSZ", "MarketHKFuture", "QotLogined", "TrdLogined", "ServerVer", "ServerBuildNo", "Time", "LocalTime", "ProgramStatus" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GetGlobalState.Request), global::GetGlobalState.Request.Parser, new[]{ "C2S" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GetGlobalState.Response), global::GetGlobalState.Response.Parser, new[]{ "RetType", "RetMsg", "ErrCode", "S2C" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum ProgramStatusType {
    [pbr::OriginalName("ProgramStatusType_None")] None = 0,
    /// <summary>
    ///已完成类似加载配置,启动服务器等操作,服务器启动之前的状态无需返回
    /// </summary>
    [pbr::OriginalName("ProgramStatusType_Loaded")] Loaded = 1,
    /// <summary>
    ///登录中
    /// </summary>
    [pbr::OriginalName("ProgramStatusType_Loging")] Loging = 2,
    /// <summary>
    ///需要图形验证码
    /// </summary>
    [pbr::OriginalName("ProgramStatusType_NeedPicVerifyCode")] NeedPicVerifyCode = 3,
    /// <summary>
    ///需要手机验证码
    /// </summary>
    [pbr::OriginalName("ProgramStatusType_NeedPhoneVerifyCode")] NeedPhoneVerifyCode = 4,
    /// <summary>
    ///登录失败,详细原因在描述返回
    /// </summary>
    [pbr::OriginalName("ProgramStatusType_LoginFailed")] LoginFailed = 5,
    /// <summary>
    ///客户端版本过低
    /// </summary>
    [pbr::OriginalName("ProgramStatusType_ForceUpdate")] ForceUpdate = 6,
    /// <summary>
    ///正在拉取类似免责声明等一些必要信息
    /// </summary>
    [pbr::OriginalName("ProgramStatusType_NessaryDataPreparing")] NessaryDataPreparing = 7,
    /// <summary>
    ///缺少必要信息
    /// </summary>
    [pbr::OriginalName("ProgramStatusType_NessaryDataMissing")] NessaryDataMissing = 8,
    /// <summary>
    ///未同意免责声明
    /// </summary>
    [pbr::OriginalName("ProgramStatusType_UnAgreeDisclaimer")] UnAgreeDisclaimer = 9,
    /// <summary>
    ///可以接收业务协议收发,正常可用状态
    /// </summary>
    [pbr::OriginalName("ProgramStatusType_Ready")] Ready = 10,
    /// <summary>
    ///OpenD登录后被强制退出登录，会导致连接全部断开,需要重连后才能得到以下该状态（并且需要在ui模式下）
    /// </summary>
    [pbr::OriginalName("ProgramStatusType_ForceLogout")] ForceLogout = 11,
  }

  #endregion

  #region Messages
  public sealed partial class ProgramStatus : pb::IMessage<ProgramStatus> {
    private static readonly pb::MessageParser<ProgramStatus> _parser = new pb::MessageParser<ProgramStatus>(() => new ProgramStatus());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProgramStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GetGlobalState.GetGlobalStateReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProgramStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProgramStatus(ProgramStatus other) : this() {
      type_ = other.type_;
      strExtDesc_ = other.strExtDesc_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProgramStatus Clone() {
      return new ProgramStatus(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::GetGlobalState.ProgramStatusType type_ = 0;
    /// <summary>
    ///当前状态
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GetGlobalState.ProgramStatusType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "strExtDesc" field.</summary>
    public const int StrExtDescFieldNumber = 2;
    private string strExtDesc_ = "";
    /// <summary>
    /// 额外描述
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StrExtDesc {
      get { return strExtDesc_; }
      set {
        strExtDesc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProgramStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProgramStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (StrExtDesc != other.StrExtDesc) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (StrExtDesc.Length != 0) hash ^= StrExtDesc.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (StrExtDesc.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(StrExtDesc);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (StrExtDesc.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StrExtDesc);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProgramStatus other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.StrExtDesc.Length != 0) {
        StrExtDesc = other.StrExtDesc;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::GetGlobalState.ProgramStatusType) input.ReadEnum();
            break;
          }
          case 18: {
            StrExtDesc = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class C2S : pb::IMessage<C2S> {
    private static readonly pb::MessageParser<C2S> _parser = new pb::MessageParser<C2S>(() => new C2S());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2S> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GetGlobalState.GetGlobalStateReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S(C2S other) : this() {
      userID_ = other.userID_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S Clone() {
      return new C2S(this);
    }

    /// <summary>Field number for the "userID" field.</summary>
    public const int UserIDFieldNumber = 1;
    private ulong userID_;
    /// <summary>
    ///需要跟FutuOpenD登陆的牛牛用户ID一致，否则会返回失败
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong UserID {
      get { return userID_; }
      set {
        userID_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2S);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2S other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserID != other.UserID) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserID != 0UL) hash ^= UserID.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserID != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(UserID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserID != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(UserID);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2S other) {
      if (other == null) {
        return;
      }
      if (other.UserID != 0UL) {
        UserID = other.UserID;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UserID = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class S2C : pb::IMessage<S2C> {
    private static readonly pb::MessageParser<S2C> _parser = new pb::MessageParser<S2C>(() => new S2C());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2C> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GetGlobalState.GetGlobalStateReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C(S2C other) : this() {
      marketHK_ = other.marketHK_;
      marketUS_ = other.marketUS_;
      marketSH_ = other.marketSH_;
      marketSZ_ = other.marketSZ_;
      marketHKFuture_ = other.marketHKFuture_;
      qotLogined_ = other.qotLogined_;
      trdLogined_ = other.trdLogined_;
      serverVer_ = other.serverVer_;
      serverBuildNo_ = other.serverBuildNo_;
      time_ = other.time_;
      localTime_ = other.localTime_;
      programStatus_ = other.programStatus_ != null ? other.programStatus_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C Clone() {
      return new S2C(this);
    }

    /// <summary>Field number for the "marketHK" field.</summary>
    public const int MarketHKFieldNumber = 1;
    private int marketHK_;
    /// <summary>
    ///Qot_Common.QotMarketState,港股主板市场状态 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MarketHK {
      get { return marketHK_; }
      set {
        marketHK_ = value;
      }
    }

    /// <summary>Field number for the "marketUS" field.</summary>
    public const int MarketUSFieldNumber = 2;
    private int marketUS_;
    /// <summary>
    ///Qot_Common.QotMarketState,美股Nasdaq市场状态 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MarketUS {
      get { return marketUS_; }
      set {
        marketUS_ = value;
      }
    }

    /// <summary>Field number for the "marketSH" field.</summary>
    public const int MarketSHFieldNumber = 3;
    private int marketSH_;
    /// <summary>
    ///Qot_Common.QotMarketState,沪市状态 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MarketSH {
      get { return marketSH_; }
      set {
        marketSH_ = value;
      }
    }

    /// <summary>Field number for the "marketSZ" field.</summary>
    public const int MarketSZFieldNumber = 4;
    private int marketSZ_;
    /// <summary>
    ///Qot_Common.QotMarketState,深市状态 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MarketSZ {
      get { return marketSZ_; }
      set {
        marketSZ_ = value;
      }
    }

    /// <summary>Field number for the "marketHKFuture" field.</summary>
    public const int MarketHKFutureFieldNumber = 5;
    private int marketHKFuture_;
    /// <summary>
    ///Qot_Common.QotMarketState,港股期货市场状态 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MarketHKFuture {
      get { return marketHKFuture_; }
      set {
        marketHKFuture_ = value;
      }
    }

    /// <summary>Field number for the "qotLogined" field.</summary>
    public const int QotLoginedFieldNumber = 6;
    private bool qotLogined_;
    /// <summary>
    ///是否登陆行情服务器
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool QotLogined {
      get { return qotLogined_; }
      set {
        qotLogined_ = value;
      }
    }

    /// <summary>Field number for the "trdLogined" field.</summary>
    public const int TrdLoginedFieldNumber = 7;
    private bool trdLogined_;
    /// <summary>
    ///是否登陆交易服务器
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool TrdLogined {
      get { return trdLogined_; }
      set {
        trdLogined_ = value;
      }
    }

    /// <summary>Field number for the "serverVer" field.</summary>
    public const int ServerVerFieldNumber = 8;
    private int serverVer_;
    /// <summary>
    ///版本号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ServerVer {
      get { return serverVer_; }
      set {
        serverVer_ = value;
      }
    }

    /// <summary>Field number for the "serverBuildNo" field.</summary>
    public const int ServerBuildNoFieldNumber = 9;
    private int serverBuildNo_;
    /// <summary>
    ///buildNo
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ServerBuildNo {
      get { return serverBuildNo_; }
      set {
        serverBuildNo_ = value;
      }
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 10;
    private long time_;
    /// <summary>
    ///当前服务器时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Time {
      get { return time_; }
      set {
        time_ = value;
      }
    }

    /// <summary>Field number for the "localTime" field.</summary>
    public const int LocalTimeFieldNumber = 11;
    private double localTime_;
    /// <summary>
    ///当前本地时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double LocalTime {
      get { return localTime_; }
      set {
        localTime_ = value;
      }
    }

    /// <summary>Field number for the "programStatus" field.</summary>
    public const int ProgramStatusFieldNumber = 12;
    private global::GetGlobalState.ProgramStatus programStatus_;
    /// <summary>
    ///当前程序状态
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GetGlobalState.ProgramStatus ProgramStatus {
      get { return programStatus_; }
      set {
        programStatus_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2C);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2C other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MarketHK != other.MarketHK) return false;
      if (MarketUS != other.MarketUS) return false;
      if (MarketSH != other.MarketSH) return false;
      if (MarketSZ != other.MarketSZ) return false;
      if (MarketHKFuture != other.MarketHKFuture) return false;
      if (QotLogined != other.QotLogined) return false;
      if (TrdLogined != other.TrdLogined) return false;
      if (ServerVer != other.ServerVer) return false;
      if (ServerBuildNo != other.ServerBuildNo) return false;
      if (Time != other.Time) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(LocalTime, other.LocalTime)) return false;
      if (!object.Equals(ProgramStatus, other.ProgramStatus)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MarketHK != 0) hash ^= MarketHK.GetHashCode();
      if (MarketUS != 0) hash ^= MarketUS.GetHashCode();
      if (MarketSH != 0) hash ^= MarketSH.GetHashCode();
      if (MarketSZ != 0) hash ^= MarketSZ.GetHashCode();
      if (MarketHKFuture != 0) hash ^= MarketHKFuture.GetHashCode();
      if (QotLogined != false) hash ^= QotLogined.GetHashCode();
      if (TrdLogined != false) hash ^= TrdLogined.GetHashCode();
      if (ServerVer != 0) hash ^= ServerVer.GetHashCode();
      if (ServerBuildNo != 0) hash ^= ServerBuildNo.GetHashCode();
      if (Time != 0L) hash ^= Time.GetHashCode();
      if (LocalTime != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(LocalTime);
      if (programStatus_ != null) hash ^= ProgramStatus.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MarketHK != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MarketHK);
      }
      if (MarketUS != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MarketUS);
      }
      if (MarketSH != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(MarketSH);
      }
      if (MarketSZ != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(MarketSZ);
      }
      if (MarketHKFuture != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(MarketHKFuture);
      }
      if (QotLogined != false) {
        output.WriteRawTag(48);
        output.WriteBool(QotLogined);
      }
      if (TrdLogined != false) {
        output.WriteRawTag(56);
        output.WriteBool(TrdLogined);
      }
      if (ServerVer != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(ServerVer);
      }
      if (ServerBuildNo != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(ServerBuildNo);
      }
      if (Time != 0L) {
        output.WriteRawTag(80);
        output.WriteInt64(Time);
      }
      if (LocalTime != 0D) {
        output.WriteRawTag(89);
        output.WriteDouble(LocalTime);
      }
      if (programStatus_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(ProgramStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MarketHK != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MarketHK);
      }
      if (MarketUS != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MarketUS);
      }
      if (MarketSH != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MarketSH);
      }
      if (MarketSZ != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MarketSZ);
      }
      if (MarketHKFuture != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MarketHKFuture);
      }
      if (QotLogined != false) {
        size += 1 + 1;
      }
      if (TrdLogined != false) {
        size += 1 + 1;
      }
      if (ServerVer != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ServerVer);
      }
      if (ServerBuildNo != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ServerBuildNo);
      }
      if (Time != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Time);
      }
      if (LocalTime != 0D) {
        size += 1 + 8;
      }
      if (programStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ProgramStatus);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2C other) {
      if (other == null) {
        return;
      }
      if (other.MarketHK != 0) {
        MarketHK = other.MarketHK;
      }
      if (other.MarketUS != 0) {
        MarketUS = other.MarketUS;
      }
      if (other.MarketSH != 0) {
        MarketSH = other.MarketSH;
      }
      if (other.MarketSZ != 0) {
        MarketSZ = other.MarketSZ;
      }
      if (other.MarketHKFuture != 0) {
        MarketHKFuture = other.MarketHKFuture;
      }
      if (other.QotLogined != false) {
        QotLogined = other.QotLogined;
      }
      if (other.TrdLogined != false) {
        TrdLogined = other.TrdLogined;
      }
      if (other.ServerVer != 0) {
        ServerVer = other.ServerVer;
      }
      if (other.ServerBuildNo != 0) {
        ServerBuildNo = other.ServerBuildNo;
      }
      if (other.Time != 0L) {
        Time = other.Time;
      }
      if (other.LocalTime != 0D) {
        LocalTime = other.LocalTime;
      }
      if (other.programStatus_ != null) {
        if (programStatus_ == null) {
          ProgramStatus = new global::GetGlobalState.ProgramStatus();
        }
        ProgramStatus.MergeFrom(other.ProgramStatus);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MarketHK = input.ReadInt32();
            break;
          }
          case 16: {
            MarketUS = input.ReadInt32();
            break;
          }
          case 24: {
            MarketSH = input.ReadInt32();
            break;
          }
          case 32: {
            MarketSZ = input.ReadInt32();
            break;
          }
          case 40: {
            MarketHKFuture = input.ReadInt32();
            break;
          }
          case 48: {
            QotLogined = input.ReadBool();
            break;
          }
          case 56: {
            TrdLogined = input.ReadBool();
            break;
          }
          case 64: {
            ServerVer = input.ReadInt32();
            break;
          }
          case 72: {
            ServerBuildNo = input.ReadInt32();
            break;
          }
          case 80: {
            Time = input.ReadInt64();
            break;
          }
          case 89: {
            LocalTime = input.ReadDouble();
            break;
          }
          case 98: {
            if (programStatus_ == null) {
              ProgramStatus = new global::GetGlobalState.ProgramStatus();
            }
            input.ReadMessage(ProgramStatus);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Request : pb::IMessage<Request> {
    private static readonly pb::MessageParser<Request> _parser = new pb::MessageParser<Request>(() => new Request());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GetGlobalState.GetGlobalStateReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Request(Request other) : this() {
      c2S_ = other.c2S_ != null ? other.c2S_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Request Clone() {
      return new Request(this);
    }

    /// <summary>Field number for the "c2s" field.</summary>
    public const int C2SFieldNumber = 1;
    private global::GetGlobalState.C2S c2S_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GetGlobalState.C2S C2S {
      get { return c2S_; }
      set {
        c2S_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(C2S, other.C2S)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (c2S_ != null) hash ^= C2S.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (c2S_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(C2S);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (c2S_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(C2S);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Request other) {
      if (other == null) {
        return;
      }
      if (other.c2S_ != null) {
        if (c2S_ == null) {
          C2S = new global::GetGlobalState.C2S();
        }
        C2S.MergeFrom(other.C2S);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (c2S_ == null) {
              C2S = new global::GetGlobalState.C2S();
            }
            input.ReadMessage(C2S);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Response : pb::IMessage<Response> {
    private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GetGlobalState.GetGlobalStateReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Response(Response other) : this() {
      retType_ = other.retType_;
      retMsg_ = other.retMsg_;
      errCode_ = other.errCode_;
      s2C_ = other.s2C_ != null ? other.s2C_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Response Clone() {
      return new Response(this);
    }

    /// <summary>Field number for the "retType" field.</summary>
    public const int RetTypeFieldNumber = 1;
    private int retType_;
    /// <summary>
    ///RetType,返回结果
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RetType {
      get { return retType_; }
      set {
        retType_ = value;
      }
    }

    /// <summary>Field number for the "retMsg" field.</summary>
    public const int RetMsgFieldNumber = 2;
    private string retMsg_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RetMsg {
      get { return retMsg_; }
      set {
        retMsg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "errCode" field.</summary>
    public const int ErrCodeFieldNumber = 3;
    private int errCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ErrCode {
      get { return errCode_; }
      set {
        errCode_ = value;
      }
    }

    /// <summary>Field number for the "s2c" field.</summary>
    public const int S2CFieldNumber = 4;
    private global::GetGlobalState.S2C s2C_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GetGlobalState.S2C S2C {
      get { return s2C_; }
      set {
        s2C_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RetType != other.RetType) return false;
      if (RetMsg != other.RetMsg) return false;
      if (ErrCode != other.ErrCode) return false;
      if (!object.Equals(S2C, other.S2C)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RetType != 0) hash ^= RetType.GetHashCode();
      if (RetMsg.Length != 0) hash ^= RetMsg.GetHashCode();
      if (ErrCode != 0) hash ^= ErrCode.GetHashCode();
      if (s2C_ != null) hash ^= S2C.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RetType != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RetType);
      }
      if (RetMsg.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(RetMsg);
      }
      if (ErrCode != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ErrCode);
      }
      if (s2C_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(S2C);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RetType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RetType);
      }
      if (RetMsg.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RetMsg);
      }
      if (ErrCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ErrCode);
      }
      if (s2C_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(S2C);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Response other) {
      if (other == null) {
        return;
      }
      if (other.RetType != 0) {
        RetType = other.RetType;
      }
      if (other.RetMsg.Length != 0) {
        RetMsg = other.RetMsg;
      }
      if (other.ErrCode != 0) {
        ErrCode = other.ErrCode;
      }
      if (other.s2C_ != null) {
        if (s2C_ == null) {
          S2C = new global::GetGlobalState.S2C();
        }
        S2C.MergeFrom(other.S2C);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RetType = input.ReadInt32();
            break;
          }
          case 18: {
            RetMsg = input.ReadString();
            break;
          }
          case 24: {
            ErrCode = input.ReadInt32();
            break;
          }
          case 34: {
            if (s2C_ == null) {
              S2C = new global::GetGlobalState.S2C();
            }
            input.ReadMessage(S2C);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
