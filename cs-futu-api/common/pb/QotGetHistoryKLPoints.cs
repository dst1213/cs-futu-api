// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Qot_GetHistoryKLPoints.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace QotGetHistoryKLPoints {

  /// <summary>Holder for reflection information generated from Qot_GetHistoryKLPoints.proto</summary>
  public static partial class QotGetHistoryKLPointsReflection {

    #region Descriptor
    /// <summary>File descriptor for Qot_GetHistoryKLPoints.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static QotGetHistoryKLPointsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChxRb3RfR2V0SGlzdG9yeUtMUG9pbnRzLnByb3RvEhZRb3RfR2V0SGlzdG9y",
            "eUtMUG9pbnRzGgxDb21tb24ucHJvdG8aEFFvdF9Db21tb24ucHJvdG8irwEK",
            "A0MyUxIRCglyZWhhYlR5cGUYASABKAUSDgoGa2xUeXBlGAIgASgFEhIKCm5v",
            "RGF0YU1vZGUYAyABKAUSKgoMc2VjdXJpdHlMaXN0GAQgAygLMhQuUW90X0Nv",
            "bW1vbi5TZWN1cml0eRIQCgh0aW1lTGlzdBgFIAMoCRIZChFtYXhSZXFTZWN1",
            "cml0eU51bRgGIAEoBRIYChBuZWVkS0xGaWVsZHNGbGFnGAcgASgDIlEKD0hp",
            "c3RvcnlQb2ludHNLTBIOCgZzdGF0dXMYASABKAUSDwoHcmVxVGltZRgCIAEo",
            "CRIdCgJrbBgDIAEoCzIRLlFvdF9Db21tb24uS0xpbmUiegoXU2VjdXJpdHlI",
            "aXN0b3J5S0xQb2ludHMSJgoIc2VjdXJpdHkYASABKAsyFC5Rb3RfQ29tbW9u",
            "LlNlY3VyaXR5EjcKBmtsTGlzdBgCIAMoCzInLlFvdF9HZXRIaXN0b3J5S0xQ",
            "b2ludHMuSGlzdG9yeVBvaW50c0tMIlwKA1MyQxJECgtrbFBvaW50TGlzdBgB",
            "IAMoCzIvLlFvdF9HZXRIaXN0b3J5S0xQb2ludHMuU2VjdXJpdHlIaXN0b3J5",
            "S0xQb2ludHMSDwoHaGFzTmV4dBgCIAEoCCIzCgdSZXF1ZXN0EigKA2MycxgB",
            "IAEoCzIbLlFvdF9HZXRIaXN0b3J5S0xQb2ludHMuQzJTImYKCFJlc3BvbnNl",
            "Eg8KB3JldFR5cGUYASABKAUSDgoGcmV0TXNnGAIgASgJEg8KB2VyckNvZGUY",
            "AyABKAUSKAoDczJjGAQgASgLMhsuUW90X0dldEhpc3RvcnlLTFBvaW50cy5T",
            "MkMqUgoKTm9EYXRhTW9kZRITCg9Ob0RhdGFNb2RlX051bGwQABIWChJOb0Rh",
            "dGFNb2RlX0ZvcndhcmQQARIXChNOb0RhdGFNb2RlX0JhY2t3YXJkEAIqZwoK",
            "RGF0YVN0YXR1cxITCg9EYXRhU3RhdHVzX051bGwQABIWChJEYXRhU3RhdHVz",
            "X0N1cnJlbnQQARIXChNEYXRhU3RhdHVzX1ByZXZpb3VzEAISEwoPRGF0YVN0",
            "YXR1c19CYWNrEANiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Common.CommonReflection.Descriptor, global::QotCommon.QotCommonReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::QotGetHistoryKLPoints.NoDataMode), typeof(global::QotGetHistoryKLPoints.DataStatus), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::QotGetHistoryKLPoints.C2S), global::QotGetHistoryKLPoints.C2S.Parser, new[]{ "RehabType", "KlType", "NoDataMode", "SecurityList", "TimeList", "MaxReqSecurityNum", "NeedKLFieldsFlag" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::QotGetHistoryKLPoints.HistoryPointsKL), global::QotGetHistoryKLPoints.HistoryPointsKL.Parser, new[]{ "Status", "ReqTime", "Kl" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::QotGetHistoryKLPoints.SecurityHistoryKLPoints), global::QotGetHistoryKLPoints.SecurityHistoryKLPoints.Parser, new[]{ "Security", "KlList" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::QotGetHistoryKLPoints.S2C), global::QotGetHistoryKLPoints.S2C.Parser, new[]{ "KlPointList", "HasNext" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::QotGetHistoryKLPoints.Request), global::QotGetHistoryKLPoints.Request.Parser, new[]{ "C2S" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::QotGetHistoryKLPoints.Response), global::QotGetHistoryKLPoints.Response.Parser, new[]{ "RetType", "RetMsg", "ErrCode", "S2C" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  ///当请求时间点数据为空时，如何返回数据
  /// </summary>
  public enum NoDataMode {
    /// <summary>
    ///直接返回空数据
    /// </summary>
    [pbr::OriginalName("NoDataMode_Null")] Null = 0,
    /// <summary>
    ///往前取值，返回前一个时间点数据
    /// </summary>
    [pbr::OriginalName("NoDataMode_Forward")] Forward = 1,
    /// <summary>
    ///向后取值，返回后一个时间点数据
    /// </summary>
    [pbr::OriginalName("NoDataMode_Backward")] Backward = 2,
  }

  /// <summary>
  ///这个时间点返回数据的状态以及来源
  /// </summary>
  public enum DataStatus {
    /// <summary>
    ///空数据
    /// </summary>
    [pbr::OriginalName("DataStatus_Null")] Null = 0,
    /// <summary>
    ///当前时间点数据
    /// </summary>
    [pbr::OriginalName("DataStatus_Current")] Current = 1,
    /// <summary>
    ///前一个时间点数据
    /// </summary>
    [pbr::OriginalName("DataStatus_Previous")] Previous = 2,
    /// <summary>
    ///后一个时间点数据
    /// </summary>
    [pbr::OriginalName("DataStatus_Back")] Back = 3,
  }

  #endregion

  #region Messages
  public sealed partial class C2S : pb::IMessage<C2S> {
    private static readonly pb::MessageParser<C2S> _parser = new pb::MessageParser<C2S>(() => new C2S());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C2S> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::QotGetHistoryKLPoints.QotGetHistoryKLPointsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S(C2S other) : this() {
      rehabType_ = other.rehabType_;
      klType_ = other.klType_;
      noDataMode_ = other.noDataMode_;
      securityList_ = other.securityList_.Clone();
      timeList_ = other.timeList_.Clone();
      maxReqSecurityNum_ = other.maxReqSecurityNum_;
      needKLFieldsFlag_ = other.needKLFieldsFlag_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C2S Clone() {
      return new C2S(this);
    }

    /// <summary>Field number for the "rehabType" field.</summary>
    public const int RehabTypeFieldNumber = 1;
    private int rehabType_;
    /// <summary>
    ///Qot_Common.RehabType,复权类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RehabType {
      get { return rehabType_; }
      set {
        rehabType_ = value;
      }
    }

    /// <summary>Field number for the "klType" field.</summary>
    public const int KlTypeFieldNumber = 2;
    private int klType_;
    /// <summary>
    ///Qot_Common.KLType,K线类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int KlType {
      get { return klType_; }
      set {
        klType_ = value;
      }
    }

    /// <summary>Field number for the "noDataMode" field.</summary>
    public const int NoDataModeFieldNumber = 3;
    private int noDataMode_;
    /// <summary>
    ///NoDataMode,当请求时间点数据为空时，如何返回数据
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NoDataMode {
      get { return noDataMode_; }
      set {
        noDataMode_ = value;
      }
    }

    /// <summary>Field number for the "securityList" field.</summary>
    public const int SecurityListFieldNumber = 4;
    private static readonly pb::FieldCodec<global::QotCommon.Security> _repeated_securityList_codec
        = pb::FieldCodec.ForMessage(34, global::QotCommon.Security.Parser);
    private readonly pbc::RepeatedField<global::QotCommon.Security> securityList_ = new pbc::RepeatedField<global::QotCommon.Security>();
    /// <summary>
    ///股票市场以及股票代码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::QotCommon.Security> SecurityList {
      get { return securityList_; }
    }

    /// <summary>Field number for the "timeList" field.</summary>
    public const int TimeListFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _repeated_timeList_codec
        = pb::FieldCodec.ForString(42);
    private readonly pbc::RepeatedField<string> timeList_ = new pbc::RepeatedField<string>();
    /// <summary>
    ///时间字符串
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> TimeList {
      get { return timeList_; }
    }

    /// <summary>Field number for the "maxReqSecurityNum" field.</summary>
    public const int MaxReqSecurityNumFieldNumber = 6;
    private int maxReqSecurityNum_;
    /// <summary>
    ///最多返回多少只股票的数据，如果未指定表示不限制
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxReqSecurityNum {
      get { return maxReqSecurityNum_; }
      set {
        maxReqSecurityNum_ = value;
      }
    }

    /// <summary>Field number for the "needKLFieldsFlag" field.</summary>
    public const int NeedKLFieldsFlagFieldNumber = 7;
    private long needKLFieldsFlag_;
    /// <summary>
    ///指定返回K线结构体特定某几项数据，KLFields枚举值或组合，如果未指定返回全部字段
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long NeedKLFieldsFlag {
      get { return needKLFieldsFlag_; }
      set {
        needKLFieldsFlag_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C2S);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C2S other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RehabType != other.RehabType) return false;
      if (KlType != other.KlType) return false;
      if (NoDataMode != other.NoDataMode) return false;
      if(!securityList_.Equals(other.securityList_)) return false;
      if(!timeList_.Equals(other.timeList_)) return false;
      if (MaxReqSecurityNum != other.MaxReqSecurityNum) return false;
      if (NeedKLFieldsFlag != other.NeedKLFieldsFlag) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RehabType != 0) hash ^= RehabType.GetHashCode();
      if (KlType != 0) hash ^= KlType.GetHashCode();
      if (NoDataMode != 0) hash ^= NoDataMode.GetHashCode();
      hash ^= securityList_.GetHashCode();
      hash ^= timeList_.GetHashCode();
      if (MaxReqSecurityNum != 0) hash ^= MaxReqSecurityNum.GetHashCode();
      if (NeedKLFieldsFlag != 0L) hash ^= NeedKLFieldsFlag.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RehabType != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RehabType);
      }
      if (KlType != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(KlType);
      }
      if (NoDataMode != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(NoDataMode);
      }
      securityList_.WriteTo(output, _repeated_securityList_codec);
      timeList_.WriteTo(output, _repeated_timeList_codec);
      if (MaxReqSecurityNum != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(MaxReqSecurityNum);
      }
      if (NeedKLFieldsFlag != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(NeedKLFieldsFlag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RehabType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RehabType);
      }
      if (KlType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(KlType);
      }
      if (NoDataMode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NoDataMode);
      }
      size += securityList_.CalculateSize(_repeated_securityList_codec);
      size += timeList_.CalculateSize(_repeated_timeList_codec);
      if (MaxReqSecurityNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxReqSecurityNum);
      }
      if (NeedKLFieldsFlag != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(NeedKLFieldsFlag);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C2S other) {
      if (other == null) {
        return;
      }
      if (other.RehabType != 0) {
        RehabType = other.RehabType;
      }
      if (other.KlType != 0) {
        KlType = other.KlType;
      }
      if (other.NoDataMode != 0) {
        NoDataMode = other.NoDataMode;
      }
      securityList_.Add(other.securityList_);
      timeList_.Add(other.timeList_);
      if (other.MaxReqSecurityNum != 0) {
        MaxReqSecurityNum = other.MaxReqSecurityNum;
      }
      if (other.NeedKLFieldsFlag != 0L) {
        NeedKLFieldsFlag = other.NeedKLFieldsFlag;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RehabType = input.ReadInt32();
            break;
          }
          case 16: {
            KlType = input.ReadInt32();
            break;
          }
          case 24: {
            NoDataMode = input.ReadInt32();
            break;
          }
          case 34: {
            securityList_.AddEntriesFrom(input, _repeated_securityList_codec);
            break;
          }
          case 42: {
            timeList_.AddEntriesFrom(input, _repeated_timeList_codec);
            break;
          }
          case 48: {
            MaxReqSecurityNum = input.ReadInt32();
            break;
          }
          case 56: {
            NeedKLFieldsFlag = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class HistoryPointsKL : pb::IMessage<HistoryPointsKL> {
    private static readonly pb::MessageParser<HistoryPointsKL> _parser = new pb::MessageParser<HistoryPointsKL>(() => new HistoryPointsKL());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HistoryPointsKL> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::QotGetHistoryKLPoints.QotGetHistoryKLPointsReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HistoryPointsKL() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HistoryPointsKL(HistoryPointsKL other) : this() {
      status_ = other.status_;
      reqTime_ = other.reqTime_;
      kl_ = other.kl_ != null ? other.kl_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HistoryPointsKL Clone() {
      return new HistoryPointsKL(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private int status_;
    /// <summary>
    ///DataStatus,数据状态
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "reqTime" field.</summary>
    public const int ReqTimeFieldNumber = 2;
    private string reqTime_ = "";
    /// <summary>
    ///请求的时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ReqTime {
      get { return reqTime_; }
      set {
        reqTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "kl" field.</summary>
    public const int KlFieldNumber = 3;
    private global::QotCommon.KLine kl_;
    /// <summary>
    ///K线数据
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::QotCommon.KLine Kl {
      get { return kl_; }
      set {
        kl_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HistoryPointsKL);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HistoryPointsKL other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Status != other.Status) return false;
      if (ReqTime != other.ReqTime) return false;
      if (!object.Equals(Kl, other.Kl)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Status != 0) hash ^= Status.GetHashCode();
      if (ReqTime.Length != 0) hash ^= ReqTime.GetHashCode();
      if (kl_ != null) hash ^= Kl.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Status != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Status);
      }
      if (ReqTime.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ReqTime);
      }
      if (kl_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Kl);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Status);
      }
      if (ReqTime.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ReqTime);
      }
      if (kl_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Kl);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HistoryPointsKL other) {
      if (other == null) {
        return;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      if (other.ReqTime.Length != 0) {
        ReqTime = other.ReqTime;
      }
      if (other.kl_ != null) {
        if (kl_ == null) {
          Kl = new global::QotCommon.KLine();
        }
        Kl.MergeFrom(other.Kl);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Status = input.ReadInt32();
            break;
          }
          case 18: {
            ReqTime = input.ReadString();
            break;
          }
          case 26: {
            if (kl_ == null) {
              Kl = new global::QotCommon.KLine();
            }
            input.ReadMessage(Kl);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SecurityHistoryKLPoints : pb::IMessage<SecurityHistoryKLPoints> {
    private static readonly pb::MessageParser<SecurityHistoryKLPoints> _parser = new pb::MessageParser<SecurityHistoryKLPoints>(() => new SecurityHistoryKLPoints());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SecurityHistoryKLPoints> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::QotGetHistoryKLPoints.QotGetHistoryKLPointsReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SecurityHistoryKLPoints() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SecurityHistoryKLPoints(SecurityHistoryKLPoints other) : this() {
      security_ = other.security_ != null ? other.security_.Clone() : null;
      klList_ = other.klList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SecurityHistoryKLPoints Clone() {
      return new SecurityHistoryKLPoints(this);
    }

    /// <summary>Field number for the "security" field.</summary>
    public const int SecurityFieldNumber = 1;
    private global::QotCommon.Security security_;
    /// <summary>
    ///股票	
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::QotCommon.Security Security {
      get { return security_; }
      set {
        security_ = value;
      }
    }

    /// <summary>Field number for the "klList" field.</summary>
    public const int KlListFieldNumber = 2;
    private static readonly pb::FieldCodec<global::QotGetHistoryKLPoints.HistoryPointsKL> _repeated_klList_codec
        = pb::FieldCodec.ForMessage(18, global::QotGetHistoryKLPoints.HistoryPointsKL.Parser);
    private readonly pbc::RepeatedField<global::QotGetHistoryKLPoints.HistoryPointsKL> klList_ = new pbc::RepeatedField<global::QotGetHistoryKLPoints.HistoryPointsKL>();
    /// <summary>
    ///K线数据
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::QotGetHistoryKLPoints.HistoryPointsKL> KlList {
      get { return klList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SecurityHistoryKLPoints);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SecurityHistoryKLPoints other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Security, other.Security)) return false;
      if(!klList_.Equals(other.klList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (security_ != null) hash ^= Security.GetHashCode();
      hash ^= klList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (security_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Security);
      }
      klList_.WriteTo(output, _repeated_klList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (security_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Security);
      }
      size += klList_.CalculateSize(_repeated_klList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SecurityHistoryKLPoints other) {
      if (other == null) {
        return;
      }
      if (other.security_ != null) {
        if (security_ == null) {
          Security = new global::QotCommon.Security();
        }
        Security.MergeFrom(other.Security);
      }
      klList_.Add(other.klList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (security_ == null) {
              Security = new global::QotCommon.Security();
            }
            input.ReadMessage(Security);
            break;
          }
          case 18: {
            klList_.AddEntriesFrom(input, _repeated_klList_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class S2C : pb::IMessage<S2C> {
    private static readonly pb::MessageParser<S2C> _parser = new pb::MessageParser<S2C>(() => new S2C());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S2C> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::QotGetHistoryKLPoints.QotGetHistoryKLPointsReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C(S2C other) : this() {
      klPointList_ = other.klPointList_.Clone();
      hasNext_ = other.hasNext_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S2C Clone() {
      return new S2C(this);
    }

    /// <summary>Field number for the "klPointList" field.</summary>
    public const int KlPointListFieldNumber = 1;
    private static readonly pb::FieldCodec<global::QotGetHistoryKLPoints.SecurityHistoryKLPoints> _repeated_klPointList_codec
        = pb::FieldCodec.ForMessage(10, global::QotGetHistoryKLPoints.SecurityHistoryKLPoints.Parser);
    private readonly pbc::RepeatedField<global::QotGetHistoryKLPoints.SecurityHistoryKLPoints> klPointList_ = new pbc::RepeatedField<global::QotGetHistoryKLPoints.SecurityHistoryKLPoints>();
    /// <summary>
    ///多只股票的多点历史K线点
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::QotGetHistoryKLPoints.SecurityHistoryKLPoints> KlPointList {
      get { return klPointList_; }
    }

    /// <summary>Field number for the "hasNext" field.</summary>
    public const int HasNextFieldNumber = 2;
    private bool hasNext_;
    /// <summary>
    ///如请求不指定maxReqSecurityNum值，则不会返回该字段，该字段表示请求是否还有超过指定限制的数据
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasNext {
      get { return hasNext_; }
      set {
        hasNext_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S2C);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S2C other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!klPointList_.Equals(other.klPointList_)) return false;
      if (HasNext != other.HasNext) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= klPointList_.GetHashCode();
      if (HasNext != false) hash ^= HasNext.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      klPointList_.WriteTo(output, _repeated_klPointList_codec);
      if (HasNext != false) {
        output.WriteRawTag(16);
        output.WriteBool(HasNext);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += klPointList_.CalculateSize(_repeated_klPointList_codec);
      if (HasNext != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S2C other) {
      if (other == null) {
        return;
      }
      klPointList_.Add(other.klPointList_);
      if (other.HasNext != false) {
        HasNext = other.HasNext;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            klPointList_.AddEntriesFrom(input, _repeated_klPointList_codec);
            break;
          }
          case 16: {
            HasNext = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Request : pb::IMessage<Request> {
    private static readonly pb::MessageParser<Request> _parser = new pb::MessageParser<Request>(() => new Request());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::QotGetHistoryKLPoints.QotGetHistoryKLPointsReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Request(Request other) : this() {
      c2S_ = other.c2S_ != null ? other.c2S_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Request Clone() {
      return new Request(this);
    }

    /// <summary>Field number for the "c2s" field.</summary>
    public const int C2SFieldNumber = 1;
    private global::QotGetHistoryKLPoints.C2S c2S_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::QotGetHistoryKLPoints.C2S C2S {
      get { return c2S_; }
      set {
        c2S_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(C2S, other.C2S)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (c2S_ != null) hash ^= C2S.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (c2S_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(C2S);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (c2S_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(C2S);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Request other) {
      if (other == null) {
        return;
      }
      if (other.c2S_ != null) {
        if (c2S_ == null) {
          C2S = new global::QotGetHistoryKLPoints.C2S();
        }
        C2S.MergeFrom(other.C2S);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (c2S_ == null) {
              C2S = new global::QotGetHistoryKLPoints.C2S();
            }
            input.ReadMessage(C2S);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Response : pb::IMessage<Response> {
    private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::QotGetHistoryKLPoints.QotGetHistoryKLPointsReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Response(Response other) : this() {
      retType_ = other.retType_;
      retMsg_ = other.retMsg_;
      errCode_ = other.errCode_;
      s2C_ = other.s2C_ != null ? other.s2C_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Response Clone() {
      return new Response(this);
    }

    /// <summary>Field number for the "retType" field.</summary>
    public const int RetTypeFieldNumber = 1;
    private int retType_;
    /// <summary>
    ///RetType,返回结果
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RetType {
      get { return retType_; }
      set {
        retType_ = value;
      }
    }

    /// <summary>Field number for the "retMsg" field.</summary>
    public const int RetMsgFieldNumber = 2;
    private string retMsg_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RetMsg {
      get { return retMsg_; }
      set {
        retMsg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "errCode" field.</summary>
    public const int ErrCodeFieldNumber = 3;
    private int errCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ErrCode {
      get { return errCode_; }
      set {
        errCode_ = value;
      }
    }

    /// <summary>Field number for the "s2c" field.</summary>
    public const int S2CFieldNumber = 4;
    private global::QotGetHistoryKLPoints.S2C s2C_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::QotGetHistoryKLPoints.S2C S2C {
      get { return s2C_; }
      set {
        s2C_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RetType != other.RetType) return false;
      if (RetMsg != other.RetMsg) return false;
      if (ErrCode != other.ErrCode) return false;
      if (!object.Equals(S2C, other.S2C)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RetType != 0) hash ^= RetType.GetHashCode();
      if (RetMsg.Length != 0) hash ^= RetMsg.GetHashCode();
      if (ErrCode != 0) hash ^= ErrCode.GetHashCode();
      if (s2C_ != null) hash ^= S2C.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RetType != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RetType);
      }
      if (RetMsg.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(RetMsg);
      }
      if (ErrCode != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ErrCode);
      }
      if (s2C_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(S2C);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RetType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RetType);
      }
      if (RetMsg.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RetMsg);
      }
      if (ErrCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ErrCode);
      }
      if (s2C_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(S2C);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Response other) {
      if (other == null) {
        return;
      }
      if (other.RetType != 0) {
        RetType = other.RetType;
      }
      if (other.RetMsg.Length != 0) {
        RetMsg = other.RetMsg;
      }
      if (other.ErrCode != 0) {
        ErrCode = other.ErrCode;
      }
      if (other.s2C_ != null) {
        if (s2C_ == null) {
          S2C = new global::QotGetHistoryKLPoints.S2C();
        }
        S2C.MergeFrom(other.S2C);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RetType = input.ReadInt32();
            break;
          }
          case 18: {
            RetMsg = input.ReadString();
            break;
          }
          case 24: {
            ErrCode = input.ReadInt32();
            break;
          }
          case 34: {
            if (s2C_ == null) {
              S2C = new global::QotGetHistoryKLPoints.S2C();
            }
            input.ReadMessage(S2C);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
