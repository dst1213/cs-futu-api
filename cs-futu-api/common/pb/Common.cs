// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Common.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Common {

  /// <summary>Holder for reflection information generated from Common.proto</summary>
  public static partial class CommonReflection {

    #region Descriptor
    /// <summary>File descriptor for Common.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CommonReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgxDb21tb24ucHJvdG8SBkNvbW1vbiIsCghQYWNrZXRJRBIOCgZjb25uSUQY",
            "ASABKAQSEAoIc2VyaWFsTm8YAiABKA0qdwoHUmV0VHlwZRITCg9SZXRUeXBl",
            "X1N1Y2NlZWQQABIbCg5SZXRUeXBlX0ZhaWxlZBD///////////8BEhwKD1Jl",
            "dFR5cGVfVGltZU91dBCc//////////8BEhwKD1JldFR5cGVfVW5rbm93bhDw",
            "/P////////8BKmgKDVBhY2tldEVuY0FsZ28SGwoXUGFja2V0RW5jQWxnb19G",
            "VEFFU19FQ0IQABIfChJQYWNrZXRFbmNBbGdvX05vbmUQ////////////ARIZ",
            "ChVQYWNrZXRFbmNBbGdvX0FFU19FQ0IQAWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Common.RetType), typeof(global::Common.PacketEncAlgo), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Common.PacketID), global::Common.PacketID.Parser, new[]{ "ConnID", "SerialNo" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  ///返回结果
  /// </summary>
  public enum RetType {
    /// <summary>
    ///成功
    /// </summary>
    [pbr::OriginalName("RetType_Succeed")] Succeed = 0,
    /// <summary>
    ///失败
    /// </summary>
    [pbr::OriginalName("RetType_Failed")] Failed = -1,
    /// <summary>
    ///超时
    /// </summary>
    [pbr::OriginalName("RetType_TimeOut")] TimeOut = -100,
    /// <summary>
    ///未知结果
    /// </summary>
    [pbr::OriginalName("RetType_Unknown")] Unknown = -400,
  }

  /// <summary>
  ///包加密算法
  /// </summary>
  public enum PacketEncAlgo {
    /// <summary>
    ///富途修改过的AES加密的ECB模式
    /// </summary>
    [pbr::OriginalName("PacketEncAlgo_FTAES_ECB")] FtaesEcb = 0,
    /// <summary>
    ///不加密
    /// </summary>
    [pbr::OriginalName("PacketEncAlgo_None")] None = -1,
    /// <summary>
    ///标准的AES加密的ECB模式
    /// </summary>
    [pbr::OriginalName("PacketEncAlgo_AES_ECB")] AesEcb = 1,
  }

  #endregion

  #region Messages
  /// <summary>
  ///包的唯一标识，用于回放攻击的识别和保护
  /// </summary>
  public sealed partial class PacketID : pb::IMessage<PacketID> {
    private static readonly pb::MessageParser<PacketID> _parser = new pb::MessageParser<PacketID>(() => new PacketID());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PacketID> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Common.CommonReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PacketID() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PacketID(PacketID other) : this() {
      connID_ = other.connID_;
      serialNo_ = other.serialNo_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PacketID Clone() {
      return new PacketID(this);
    }

    /// <summary>Field number for the "connID" field.</summary>
    public const int ConnIDFieldNumber = 1;
    private ulong connID_;
    /// <summary>
    ///当前TCP连接的连接ID，一条连接的唯一标识，InitConnect协议会返回
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ConnID {
      get { return connID_; }
      set {
        connID_ = value;
      }
    }

    /// <summary>Field number for the "serialNo" field.</summary>
    public const int SerialNoFieldNumber = 2;
    private uint serialNo_;
    /// <summary>
    ///包头中的包自增序列号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint SerialNo {
      get { return serialNo_; }
      set {
        serialNo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PacketID);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PacketID other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ConnID != other.ConnID) return false;
      if (SerialNo != other.SerialNo) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ConnID != 0UL) hash ^= ConnID.GetHashCode();
      if (SerialNo != 0) hash ^= SerialNo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ConnID != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(ConnID);
      }
      if (SerialNo != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(SerialNo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ConnID != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ConnID);
      }
      if (SerialNo != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SerialNo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PacketID other) {
      if (other == null) {
        return;
      }
      if (other.ConnID != 0UL) {
        ConnID = other.ConnID;
      }
      if (other.SerialNo != 0) {
        SerialNo = other.SerialNo;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ConnID = input.ReadUInt64();
            break;
          }
          case 16: {
            SerialNo = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
